---
title: "Plots"
format: pdf
editor: visual
---

# Homework

1.  Use facets in ggplot()
2.  Use Legends in ggplot()
3.  Use Boxplots and Violin plots

# Data Visualization

I am following Intro2R book (Chapter 4) which Haviland posted in the content folder (Class 2 -Jan 23) on Blackboard for this discussion. We will be learning how to use plot() in base R for different visualizations.

## Scatter Plot

I am using the `city` data set containing `porto`, `aberdeen`, `nairobi` and `genoa` columns which we created in the last discussion. Second and Third line of code produces you same plots.

`points()` is used to add more points representing the variable you specify.

```{r}
plot(city$porto)
points(city$aberdeen, col = 'red')
plot(city$porto, city$aberdeen)
plot(city$porto ~ city$aberdeen, col='blue')

```

#### More than 1 Plot in one page

Use par() before you start plotting to put all the following plots in one page.

```{r}
par(mfrow = c(2,2))
plot(city$porto)
plot(city$porto, city$aberdeen)
plot(city$porto ~ city$aberdeen, col='blue')
plot(city$aberdeen, city$genoa)
```

#### Lines

You can add lines using `abline()` after you are done plotting as we did in last discussion or you can specify it in the `plot()` function itself.

```{r}
par(mfrow = c(2, 2))
plot(city$porto, type = "l")
points(city$aberdeen, col = 'red')
plot(city$porto, city$aberdeen,  type = "b")
plot(city$porto ~ city$aberdeen, col='blue', type = "o")
plot(city$aberdeen, city$genoa, type = "c")

```

## Histograms

We already explored histograms in the previous discussion.

```{r}
hist(city$porto)
```

Remember to put `freq` = `FALSE` as we are plotting density.

```{r}
dens <- density(city$porto)
hist(city$porto, main = "porto",
      freq = FALSE)
lines(dens)
```

## Pair Plots and Co Plots

`panel.smooth` for lines

To use `panel.hist` and `panel.cor`, you need to copy and paste these functions from `?pairs` to console.

```{r}
pairs(city[, c("porto", "aberdeen", "nairobi", "genoa")], panel = panel.smooth)
pairs(city[, c("porto", "aberdeen", "nairobi", "genoa")], upper.panel = panel.smooth, lower.panel = panel.cor, diag.panel = panel.hist)
```

`coplot()` is basically accounting for the third variable that might be effecting the two variables that you are interested in.

```{r}
coplot(porto ~ genoa|aberdeen, data = city)
```

## Saving the plots

You can save the plots using `png` or `jgp`. Type the file name you want it to be saved as follow :

```{r}
png("plot.png")
coplot(porto ~ genoa|aberdeen, data = city)
```

If it doesn't save in your folder, you might need to set your current folder as working directory.

# Q/A

### How can we alter the figure dimensions?

There are many ways to do it. First, you can set a size as default in the first R chunk :

```{r}
knitr::opts_chunk$set(fig.width = 7, fig.height = 5)

```

or you can set it in individual R chunk as follow :

```{r my-plot, fig.width=8, fig.height=6}

plot(city$porto)

```
